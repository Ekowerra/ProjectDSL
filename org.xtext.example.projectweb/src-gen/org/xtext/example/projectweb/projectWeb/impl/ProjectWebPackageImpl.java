/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.projectweb.projectWeb.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.example.projectweb.projectWeb.ProjectWebFactory;
import org.xtext.example.projectweb.projectWeb.ProjectWebPackage;
import org.xtext.example.projectweb.projectWeb.programWeb;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ProjectWebPackageImpl extends EPackageImpl implements ProjectWebPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass programWebEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.example.projectweb.projectWeb.ProjectWebPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private ProjectWebPackageImpl()
  {
    super(eNS_URI, ProjectWebFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link ProjectWebPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static ProjectWebPackage init()
  {
    if (isInited) return (ProjectWebPackage)EPackage.Registry.INSTANCE.getEPackage(ProjectWebPackage.eNS_URI);

    // Obtain or create and register package
    ProjectWebPackageImpl theProjectWebPackage = (ProjectWebPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof ProjectWebPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new ProjectWebPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theProjectWebPackage.createPackageContents();

    // Initialize created meta-data
    theProjectWebPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theProjectWebPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(ProjectWebPackage.eNS_URI, theProjectWebPackage);
    return theProjectWebPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getprogramWeb()
  {
    return programWebEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getprogramWeb_Declarations()
  {
    return (EAttribute)programWebEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getprogramWeb_Nav()
  {
    return (EAttribute)programWebEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getprogramWeb_Goto()
  {
    return (EAttribute)programWebEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getprogramWeb_If()
  {
    return (EAttribute)programWebEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getprogramWeb_Fonction()
  {
    return (EAttribute)programWebEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getprogramWeb_Proc()
  {
    return (EAttribute)programWebEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProjectWebFactory getProjectWebFactory()
  {
    return (ProjectWebFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    programWebEClass = createEClass(PROGRAM_WEB);
    createEAttribute(programWebEClass, PROGRAM_WEB__DECLARATIONS);
    createEAttribute(programWebEClass, PROGRAM_WEB__NAV);
    createEAttribute(programWebEClass, PROGRAM_WEB__GOTO);
    createEAttribute(programWebEClass, PROGRAM_WEB__IF);
    createEAttribute(programWebEClass, PROGRAM_WEB__FONCTION);
    createEAttribute(programWebEClass, PROGRAM_WEB__PROC);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(programWebEClass, programWeb.class, "programWeb", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getprogramWeb_Declarations(), ecorePackage.getEString(), "declarations", null, 0, -1, programWeb.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getprogramWeb_Nav(), ecorePackage.getEString(), "nav", null, 0, 1, programWeb.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getprogramWeb_Goto(), ecorePackage.getEString(), "goto", null, 0, 1, programWeb.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getprogramWeb_If(), ecorePackage.getEString(), "if", null, 0, 1, programWeb.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getprogramWeb_Fonction(), ecorePackage.getEString(), "fonction", null, 0, 1, programWeb.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getprogramWeb_Proc(), ecorePackage.getEString(), "proc", null, 0, 1, programWeb.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //ProjectWebPackageImpl
